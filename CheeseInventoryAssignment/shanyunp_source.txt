/*
Name: Yunpeng Shan
Assignment: assignment 4
Date: July 12 2022

Page Description: Ths contains the objects and functions needed for
this appliation, including array object, enum, cheese object,
validation function, and init function.
*/


"use strict";

//invoke init function when DOM content is loaded
document.addEventListener("DOMContentLoaded", init);
//an object array for header navigation
const headerNavLinks = [
    {text: "List Inventory", url: "list.html"},
    {text: "Search Inventory", url: "search.html"},
];
//an object array for footer navigation
const footerNavLinks = [
    {text: "Support", url: "support.html"},
    {text: "Orders", url: "orders.html"},
    {text: "Vendors", url: "vendors.html"},
    {text: "Units", url: "units.html"},
];
//a function accepts object array of link data and return a nav node
//that contains all navigation data as links
function add_navigation(links){
    let nav = document.createElement("nav");
    for (let i = 0; i < links.length; i++) {
        let a = document.createElement("a");
        a.href = links[i].url;
        a.innerHTML = links[i].text;
        //insert modified a node to nav node
        nav.append(a);
    }
    return nav;
};
//an event object to set a custom validation
let validation = {
    handleEvent(event) {
        //access the form
        let form = event.target.form;
        //if the weight units is Lb. Square or Lb. Tomme and 
        //the weight is over 15
        if (form.weightUnits.value == "SQUARE" && form.cheeseWeight.value > 15 || 
                form.weightUnits.value == "TOMME" 
                    && form.cheeseWeight.value > 15 ) {
                        //when value is invalid, display a message
                        form.cheeseWeight.setCustomValidity("Weight must be 15" 
                            + " or less for Square and Tomme.");
                        //forces the form to report and 
                        //causes the error message to appre
                        form.cheeseWeight.reportValidity();
        } else {
            //reset the validity message to null to make it valid
            form.cheeseWeight.setCustomValidity("");
        }
        //check if anything is invalid, if invalid, prevent form from submitting
        if (form.checkValidity()) {
            event.preventDefault();
        }
    }
};
//a function to create cheese object
function Cheese(name, weight, units, price, url, qoh) {
    this.name = name;
    this.weight = weight;
    this.units = units;
    this.price = price;
    this.url = url;
    this.qoh = qoh;
    //a cheeseLink accessor property to return node object
    Object.defineProperty(this, "cheeseLink", {
        get() {
            
            let emptyNode;
            let cheeseNameNode = document.createTextNode(this.name);
            //if the url has value, return a node with cheese name and the url
            if (url.length != 0) {
                let a = document.createElement("a");
                a.append(cheeseNameNode);
                a.href = this.url;
                emptyNode = a;
            //if the url has no value, just return a text node
            } else {
                emptyNode = cheeseNameNode;
            }
            return emptyNode;
        }
    })
    //a to String functing to display desired String output;
    this.toString = function() {
        return `${this.qoh} ${this.name} ${this.weight} ${this.units}`;
    };
}
//an object to simulate enum with cheese weight units value
const Units = Object.freeze({
    WHEEL: "Lb. Wheel",
    HALF_WHEEL: "Lb. Half Wheel",
    QUARTER_WHEEL: "Lb. Quarter Wheel",
    EIGHTH_WHEEL: "Lb. Eighth Wheel",
    SQUARE: "Lb. Square",
    TOMME: "Lb. Tomme"
});

//an event object to display the insert information to html node
let cheese = {
    handleEvent(event) {
        //access the form
        let form = event.target.form;
        //assign cheese name value to name variable
        let name = form.cheeseName.value;
        //assign cheese weight value to weight variable
        let weight = form.cheeseWeight.value;
        //assign cheese weight value units to units variable
        let units = form.weightUnits.value;
        //a condition statement gives value from enum object to units 
        //when certain value is selected by user
        if (form.weightUnits.value == "WHEEL") {
            units = Units.WHEEL;
        } else if (form.weightUnits.value == "HALF_WHEEL") {
            units = Units.HALF_WHEEL;
        } else if (form.weightUnits.value == "QUARTER_WHEEL") {
            units = Units.QUARTER_WHEEL;
        } else if (form.weightUnits.value == "EIGHTH_WHEEL") {
            units = Units.EIGHTH_WHEEL;
        } else if (form.weightUnits.value == "SQUARE") {
            units = Units.SQUARE;
        } else if (form.weightUnits.value == "TOMME") {
            units = Units.TOMME;
        }
        //assign cheese price value to price variable
        let price = form.cheesePrice.value;
        //assign cheese url value to url variable
        let url = form.cheeseUrl.value;
        //assign cheese qty to qoh variable
        let qoh = form.cheeseQty.value;
        //create a new cheese by using the constructor
        let newCheese = new Cheese(name, weight, units, price, url, qoh);
        //locate div position
        let div = document.querySelector("main > div");
        //create a ul node
        let myUl = document.createElement("ul");
        //create text node with cheese qoh value
        let qohText = document.createTextNode(newCheese.qoh);
        //create text node with cheese weight, and format it to one decimal
        let weightText = document.createTextNode(parseFloat(newCheese.weight).toFixed(1));
        //create text node with cheese units
        let unitsText = document.createTextNode(newCheese.units);
        //check form validity, if valid, insert nodes
        //and prevent form from submitting to see results on web page
        if (form.checkValidity()) {
            div.append(qohText);
            div.append(" ");
            div.append(newCheese.cheeseLink);
            div.append(" ");
            div.append(weightText);
            div.append(" ");
            div.append(unitsText);
            div.append(" ");
            div.append(myUl);
            form.after(div);
            event.preventDefault();
        }
    }
};
//an init function to be invoke when DOM content is loaded
function init() {
    //locate header position
    let header = document.querySelector("header");
    //insert navigations by using add_navigation function
    header.append(add_navigation(headerNavLinks));
    //locate footer position
    let footer = document.querySelector("footer");
    //insert navigations by using add_navigation function
    footer.before(add_navigation(footerNavLinks));
    //display error message when change cheese units
    document.forms.cheese.weightUnits.addEventListener("change", validation);
    //locate button position
    let submitBtn = document.querySelector("button[type=submit]");
    //display cheese added when click submit button
    submitBtn.addEventListener("click", cheese);
}